pub enum Opcode { 
    // 0x - 0x0B (Stop and Arithmetic Operations)
    STOP, ADD, MUL, SUB, DIV, SDIV, MOD, SMOD, ADDMOD, MULMOD, EXP, SIGNEXTEND,

    // 0x1 - 0x1D (Comparison & Bitwise Logic Operations)
    LT, GT, SLT, SGT, EQ, ISZERO, AND, OR, XOR, NOT, BYTE, SHL, SHR, SAR,

    SHA3, // (0x2 SHA3)

    // 0x3 - 0x3F (Environmental Information)
    ADDRESS, BALANCE, ORIGIN, CALLER, CALLVALUE, CALLDATALOAD, CALLDATACOPY, CODESIZE, CODECOPY, GASPRICE, EXTCODESIZE,
    EXTCODECOPY, RETURNDATASIZE, RETURNDATACOPY, EXTCODEHASH,

    // 0x40 - 0x48 (Block information)
    BLOCKHASH, COINBASE, TIMESTAMP, NUMBER, DIFFICULTY, GASLIMIT, CHAINID, SELFBALANCE, BASEFEE,

    // 0x50 - 0x5B (Stack Memory Storage and Flow Operations)
    POP, MLOAD, MSTORE, MSTORE8, SLOAD, SSTORE, JUMP, JUMPI, PC, MSIZE, GAS, JUMPDEST,

    // 0x60 - 0x7F (Push Operations)
    PUSH(u8),
    // 0x80 - 0x8F (Duplication Operations)
    DUP(u8),
    // 0x90 - 0x9F (Exchange Operations)
    SWAP(u8),
    // 0xA0 - 0xA4 (Logging Operations)
    LOG(u8),

    // 0xF0 - 0xFF (System operations)
    CALLCODE, RETURN, DELEGATECALL, CREATE2, STATICCALL, REVERT, INVALID, SELFDESTRUCT
}

impl From<u8> for Opcode {
    fn from(val: u8) -> Opcode {
        match val {
            0x00 => Opcode::STOP,
            0x01 => Opcode::ADD,
            0x02 => Opcode::MUL,
            0x03 => Opcode::SUB,
            0x04 => Opcode::DIV,
            0x05 => Opcode::SDIV,
            0x06 => Opcode::MOD,
            0x07 => Opcode::SMOD,
            0x08 => Opcode::ADDMOD,
            0x09 => Opcode::MULMOD,
            0x0A => Opcode::EXP,
            0x0B => Opcode::SIGNEXTEND,
            0x10 => Opcode::LT,
            0x11 => Opcode::GT,
            0x12 => Opcode::SLT,
            0x13 => Opcode::SGT,
            0x14 => Opcode::EQ,
            0x15 => Opcode::ISZERO,
            0x16 => Opcode::AND,
            0x17 => Opcode::OR,
            0x18 => Opcode::XOR,
            0x19 => Opcode::NOT,
            0x1A => Opcode::BYTE,
            0x1B => Opcode::SHL,
            0x1C => Opcode::SHR,
            0x1D => Opcode::SAR,
            0x20 => Opcode::SHA3,
            0x30 => Opcode::ADDRESS,
            0x31 => Opcode::BALANCE,
            0x32 => Opcode::ORIGIN,
            0x33 => Opcode::CALLER,
            0x34 => Opcode::CALLVALUE2,
            0x35 => Opcode::CALLDATALOAD,
            0x36 => Opcode::CALLDATASIZE,
            0x37 => Opcode::CALLDATACOPY,
            0x38 => Opcode::CODESIZE,
            0x39 => Opcode::CODECOPY,
            0x3A => Opcode::GASPRICE,
            0x3B => Opcode::EXTCODESIZE,
            0x3C => Opcode::EXTCODECOPY,
            0x3D => Opcode::RETURNDATASIZE,
            0x3E => Opcode::RETURNDATACOPY,
            0x3F => Opcode::EXTCODEHASH,
            0x40 => Opcode::BLOCKHASH,
            0x41 => Opcode::COINBASE,
            0x42 => Opcode::TIMESTAMP,
            0x43 => Opcode::NUMBER,
            0x44 => Opcode::DIFFICULTY,
            0x45 => Opcode::GASLIMIT,
            0x46 => Opcode::CHAINID,
            0x47 => Opcode::SELFBALANCE,
            0x48 => Opcode::BASEFEE,
            0x50 => Opcode::POP,
            0x51 => Opcode::MLOAD,
            0x52 => Opcode::MSTORE,
            0x53 => Opcode::MSTORE8,
            0x54 => Opcode::SLOAD,
            0x55 => Opcode::SSTORE,
            0x56 => Opcode::JUMP,
            0x57 => Opcode::JUMPI,
            0x58 => Opcode::PC,
            0x59 => Opcode::MSIZE,
            0x5A => Opcode::GAS,
            0x5B => Opcode::JUMPDEST,
            0x60 => Opcode::PUSH(1),
            0x61 => Opcode::PUSH(2),
            0x62 => Opcode::PUSH(3),
            0x63 => Opcode::PUSH(4),
            0x64 => Opcode::PUSH(5),
            0x65 => Opcode::PUSH(6),
            0x66 => Opcode::PUSH(7),
            0x67 => Opcode::PUSH(8),
            0x68 => Opcode::PUSH(9),
            0x69 => Opcode::PUSH(10),
            0x6A => Opcode::PUSH(11),
            0x6B => Opcode::PUSH(12),
            0x6C => Opcode::PUSH(13),
            0x6D => Opcode::PUSH(14),
            0x6E => Opcode::PUSH(15),
            0x6F => Opcode::PUSH(16),
            0x70 => Opcode::PUSH(17),
            0x71 => Opcode::PUSH(18),
            0x72 => Opcode::PUSH(19),
            0x73 => Opcode::PUSH(20),
            0x74 => Opcode::PUSH(21),
            0x75 => Opcode::PUSH(22),
            0x76 => Opcode::PUSH(23),
            0x77 => Opcode::PUSH(24),
            0x78 => Opcode::PUSH(25),
            0x79 => Opcode::PUSH(26),
            0x7A => Opcode::PUSH(27),
            0x7B => Opcode::PUSH(28),
            0x7C => Opcode::PUSH(29),
            0x7D => Opcode::PUSH(30),
            0x7E => Opcode::PUSH(31),
            0x7F => Opcode::PUSH(32),
            0x80 => Opcode::DUP(1),
            0x81 => Opcode::DUP(2),
            0x82 => Opcode::DUP(3),
            0x83 => Opcode::DUP(4),
            0x84 => Opcode::DUP(5),
            0x85 => Opcode::DUP(6),
            0x86 => Opcode::DUP(7),
            0x87 => Opcode::DUP(8),
            0x88 => Opcode::DUP(9),
            0x89 => Opcode::DUP(10),
            0x8A => Opcode::DUP(11),
            0x8B => Opcode::DUP(12),
            0x8C => Opcode::DUP(13),
            0x8D => Opcode::DUP(14),
            0x8E => Opcode::DUP(15),
            0x8F => Opcode::DUP(16),
            0x90 => Opcode::SWAP(1),
            0x91 => Opcode::SWAP(2),
            0x92 => Opcode::SWAP(3),
            0x93 => Opcode::SWAP(4),
            0x94 => Opcode::SWAP(5),
            0x95 => Opcode::SWAP(6),
            0x96 => Opcode::SWAP(7),
            0x97 => Opcode::SWAP(8),
            0x98 => Opcode::SWAP(9),
            0x99 => Opcode::SWAP(10),
            0x9A => Opcode::SWAP(11),
            0x9B => Opcode::SWAP(12),
            0x9C => Opcode::SWAP(13),
            0x9D => Opcode::SWAP(14),
            0x9E => Opcode::SWAP(15),
            0x9F => Opcode::SWAP(16),
            0xA0 => Opcode::LOG(0),
            0xA1 => Opcode::LOG(1),
            0xA2 => Opcode::LOG(2),
            0xA3 => Opcode::LOG(3),
            0xA4 => Opcode::LOG(4),
            0xF0 => Opcode::CREATE,
            0xF1 => Opcode::CALL,
            0xF2 => Opcode::CALLCODE,
            0xF3 => Opcode::RETURN,
            0xF4 => Opcode::DELEGATECALL,
            0xF5 => Opcode::CREATE2,
            0xFA => Opcode::STATICCALL,
            0xFD => Opcode::REVERT,
            0xFF => Opcode::SELFDESTRUCT,
            _ | 0xFE => Opcode::INVALID,
        }
    }
}
